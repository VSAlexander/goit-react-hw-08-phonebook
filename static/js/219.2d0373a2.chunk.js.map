{"version":3,"file":"static/js/219.2d0373a2.chunk.js","mappings":"4RAMO,SAASA,IACd,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GACZ,MACF,QACE,MAAM,IAAIC,MAEf,EAgBD,OACE,UAAC,IAAD,CAAOC,QAAS,EAAGC,GAAG,OAAOC,SAfV,SAAAN,GACnBA,EAAMO,iBACNV,EACEW,EAAAA,GAAoB,CAClBjB,KAAMA,EACNE,MAAOA,EACPE,SAAUA,KAGdH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAGsDa,aAAa,MAAlE,WACE,UAAC,KAAD,CAAaC,YAAU,EAAvB,WACE,SAAC,IAAD,wBACA,SAAC,EAAAC,EAAD,CAAOpB,KAAK,OAAOqB,KAAK,OAAOV,MAAOX,EAAMsB,SAAUd,QAExD,UAAC,KAAD,CAAaW,YAAU,EAAvB,WACE,SAAC,IAAD,qBACA,SAAC,EAAAC,EAAD,CACEpB,KAAK,QACLqB,KAAK,QACLV,MAAOT,EACPoB,SAAUd,QAGd,UAAC,KAAD,CAAaW,YAAU,EAAvB,WACE,SAAC,IAAD,wBACA,SAAC,EAAAC,EAAD,CACEpB,KAAK,WACLqB,KAAK,WACLV,MAAOP,EACPkB,SAAUd,QAGd,SAAC,IAAD,CAAQa,KAAK,SAAb,uBAGL,CCtEc,SAASE,IACtB,OAAO,SAACzB,EAAD,GACR,C","sources":["components/SignUpForm/SignUpForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input, Stack, Button, FormControl, FormLabel } from '@chakra-ui/react';\n\nimport * as operations from 'redux/auth/operations';\n\nexport function SignUpForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        throw new Error();\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(\n      operations.register({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Stack spacing={4} as=\"form\" onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormControl isRequired>\n        <FormLabel>Username</FormLabel>\n        <Input name=\"name\" type=\"text\" value={name} onChange={handleChange} />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Email</FormLabel>\n        <Input\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n      </FormControl>\n      <FormControl isRequired>\n        <FormLabel>Password</FormLabel>\n        <Input\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n      </FormControl>\n      <Button type=\"submit\">Sign Up</Button>\n    </Stack>\n  );\n}\n\n// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n\n// import {\n//   Stack,\n//   Input,\n//   InputGroup,\n//   InputLeftElement,\n//   Button,\n//   FormControl,\n//   FormLabel,\n//   FormErrorMessage,\n//   FormHelperText,\n// } from '@chakra-ui/react';\n\n// import * as operations from 'redux/auth/operations';\n\n// export function SignUpForm() {\n//   const [name, setName] = useState(null);\n//   const [email, setEmail] = useState(null);\n//   const [password, setPassword] = useState(null);\n\n//   const dispatch = useDispatch();\n\n//   const handleChange = event => {\n//     const { name, value } = event.target;\n\n//     switch (name) {\n//       case 'name':\n//         setName(value);\n//         break;\n//       case 'email':\n//         setEmail(value);\n//         break;\n//       case 'password':\n//         setPassword(value);\n//         break;\n//       default:\n//         throw new Error();\n//     }\n//   };\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     dispatch(\n//       operations.register({\n//         name: name,\n//         email: email,\n//         password: password,\n//       })\n//     );\n//     setName('');\n//     setEmail('');\n//     setPassword('');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} autoComplete=\"off\">\n//       <label>\n//         Username\n//         <input type=\"text\" name=\"name\" onChange={handleChange} />\n//       </label>\n//       <label>\n//         Email\n//         <input type=\"email\" name=\"email\" onChange={handleChange} />\n//       </label>\n//       <label>\n//         Password\n//         <input type=\"password\" name=\"password\" onChange={handleChange} />\n//       </label>\n//       <button type=\"submit\">Sign Up</button>\n//     </form>\n//   );\n// }\n","import { SignUpForm } from 'components/SignUpForm/SignUpForm';\n\nexport default function RegisterPage() {\n  return <SignUpForm />;\n}\n"],"names":["SignUpForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","event","target","value","Error","spacing","as","onSubmit","preventDefault","operations","autoComplete","isRequired","I","type","onChange","RegisterPage"],"sourceRoot":""}